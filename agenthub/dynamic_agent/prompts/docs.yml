usage:
  exit:
    docstr: "The exit command notifies the system that the task has been completed."
    args: 'None'
    use:
      - "```exit``` - Exits the development loop"
    example:
      - "```exit```"

  read:
    docstr: "The read command enables you to read a file on particular lines, or the whole thing. The file must exist to read it."
    args: '<file> [<start> <end>]. Defaults: start=0, end=-1'
    use:
     - "```read <file>``` - Reads an entire file and shows you the contents. This is good for reviewing or getting familiar with a file"
     - "```read <file> <start> <end>``` - Reads the file from start to end lines. This is useful for looking at a particular part of a file"
    example:
      - "```read example.txt```"
      - "```read example.txt 10 20```"

  write:
    docstr: "The write command enables you to write to files. To modify files that are open use the edit command."
    args: '<file> <content> [<start> <end>]. Defaults: start=0, end=-1'
    use:
     - "```write <file> <content>``` - Completely rewrites the file to have the content you listed"
     - "```write <file> <content> <start> <end>``` - Rewrites the file on the lines that you designate for start and end with content"
    example:
      - "```write example.txt This is a new file content```"
      - "```write example.txt This is a change 5 10```"

  edit:
    docstr: "The edit command enables you to modify the currently open file."
    args: '<start> <end> <changes>'
    use:
      - "```edit <start> <end> <changes>``` - Rewrites the currently open file between lines start and end with changes"
    example:
      - "```edit 10 20 This is a change to lines 10-20```"

  browse:
    docstr: "The browse command enables you to get web pages in text format."
    args: '<url>'
    use:
      - "```browse <url>``` - Browses the internet and returns the text format of the url you request."
    example:
      - "```browse https://www.example.com```"

  think:
    docstr: "The think command allows you to commit a specific thought to memory for later"
    args: '<thought>'
    use:
      - "```think <thought>``` - This will save the thought for late so that you can read it in your memories"
    example:
      - "```think Remember to follow up on task X when this task finishes```"

  scroll_up:
    docstr: "The scroll_up command enables you to scroll up in the current file"
    args: 'None'
    use:
      - "```scroll_up``` - Returns the 100 lines above your current line in the current file"
    example:
      - "```scroll_up```"

  scroll_down:
    docstr: "The scroll_down command enables you to scroll down in the current file"
    args: 'None'
    use:
      - "```scroll_down``` - Returns the 100 lines below your current line in the current file"
    example:
      - "```scroll_down```"

  goto:
    docstr: "The goto command enables you to go to a specific line in the current file"
    args: '<line>'
    use:
      - "```goto <line>``` - This will allow you to navigate extremely quickly through the current file"
    example:
      - "```goto 42```"

  search_for:
    docstr: "The search_for command enables you to search for a particular substring within the current file"
    args: '<item>'
    use:
      - "```search_for <item>``` - This will search through all of the lines in a file to try and find a substring match for your search item."
    example:
      - "```search_for example string```"

  search_dir:
    docstr: "The search_dir command enables you to search for a particular substring within all the files of a directory"
    args: '<item>'
    use:
      - "```search_dir <item>``` - This will search through your current directory and return all of the lines and files that have item in them"
    example:
      - "```search_dir example string```"

  find_file:
    docstr: "The find_file command enables you to find a file very quickly"
    args: '<name>'
    use:
      - "```find_file <name>``` - This will search your working directory for any files matching the name you specify"
    example:
      - "```find_file example.txt```"

  bash:
    docstr: "You are capable of using default bash commands in this environment"
    args: "The arguments for each command are context specific"
    use:
      - "```ls``` - This will show you all of the files and folders in your working dir"
      - "```mkdir <name>``` - This will create a new directory with the name you give it"
      - "```touch <name>``` - This will create a new file with the name you give it. NOTE: you will need to use the read or write command to access it."
      - "```chmod <flags> <file>``` - This will allow you to change access permissions"
      - "```cd <dir>``` - This will change the current directory to the dir you designate"
    example:
      - "```ls```"
      - "```mkdir test```"
      - "```touch file.py```"
      - "```chmod +x script.sh```"
      - "```cd test```"
